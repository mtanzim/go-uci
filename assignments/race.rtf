{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 A race condition is when the outcome of your program is dependent on the non-deterministic nature of interleaving. This is almost never desired. Synchronization mechanisms are generally in place to prevent race conditions. An example of a race condition can be seen from the output of the provided script.\
\
In the script, we have a shared pointer to x, and two goroutines modify it concurrently. Therefore, the output in the main routine is dependent on the scheduler, and thus non-deterministic.\
\
Expect:  12\
Actual:  12\
Expect:  12\
Actual:  12\
Expect:  12\
Actual:  0\
Expect:  12\
Actual:  12\
Expect:  12\
Actual:  12\
Expect:  12\
Actual:  3\
Expect:  12\
Actual:  12\
Expect:  12\
Actual:  3\
Expect:  12\
Actual:  12\
Expect:  12\
Actual:  12\
Expect:  12\
Actual:  12}